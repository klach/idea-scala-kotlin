plugins {
    id 'com.github.ben-manes.versions' version '0.17.0' apply false
    id 'com.github.johnrengelman.shadow' version '2.0.1' apply false
}

subprojects {
    apply plugin: 'com.github.ben-manes.versions'
    apply plugin: 'java'

    sourceCompatibility = 1.8

    repositories {
        maven { url "http://dl.bintray.com/kotlin/kotlin-eap-1.1" }
        mavenCentral()
    }

    dependencies {
        testCompile group: 'junit', name: 'junit', version:'4.12'
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs += ["-parameters"]
    }

    if (it.name in ["java-guava", "kotlin-module", "scala-module"]) {
        apply plugin: "application"

        mainClassName = 'foo'

        task dependenciesSize(dependsOn: distZip) {
            description = 'Counts size of JAR created from each module'
            group = 'Help'
            doLast {
                def count = sourceSets.main.output.classesDirs.collect { fileTree(it) { include '**/*.class' }.files.size() }.sum()
                println "$count classes"

                int sumBytes = 0
                def formatString = "%-36s %6.1f KB"
                zipTree(distZip.archivePath).matching { include '*/lib/*' }.files.sort().each {
                    sumBytes += it.length()
                    println String.format(formatString, it.name, it.length() / 1024)
                }
                println String.format(formatString, "ALL", sumBytes / 1024)
            }
        }
        tasks.remove(run)
        tasks.remove(distTar)
    }
}
